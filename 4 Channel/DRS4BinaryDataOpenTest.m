function [timeConversion,voltageConversion,tCell] = DRS4BinaryDataOpenTest(c,s)

%{
findingTCh1 = fseek(fid,16,'bof');

readingTCh1 = fread(fid,1024,'single');

findingTCh2 = fseek(fid,4116,'bof');

readingTCh2 = fread(fid,1024,'single');

findingVCh1 = fseek(fid,8252,'bof');

readingVCh1 = fread(fid,1024, 'short');

findingVCh2 = fseek(fid,10308,'bof');

readingVCh2 = fread(fid,1024,'short');

tCell(c) = fread(fid,1,'short');
%}

fid = fopen('C:\Saved Data Analysis - Lecroy\SHDigital\HOPG\ToF80V_sBias30V.dat');

tCell(c) = fread(fid,1,'short');

findingTCh1 = fseek(fid,16,'bof');

readingTCh1 = fread(fid,1024,'single');

findingTCh2 = fseek(fid,4116,'bof');

readingTCh2 = fread(fid,1024,'single');

findingVCh1 = fseek(fid,(s-1)*4144+8252,'bof');

    readingVCh1 = fread(fid,1024, 'short');

    findingVCh2 = fseek(fid,(s-1)*4144+10308,'bof');

    readingVCh2 = fread(fid,1024,'short');

    findingtCell = fseek(fid,(s-1)*4144+8242,'bof');

    readingtCell = fread(fid,1,'short');
    
    findingRC = fseek(fid,(s-1)*4144+8234,'bof');
    
    rangeCenter = fread(fid,1,'short');

timeConversionCh1 = zeros(size(readingTCh1));
timeConversionCh1(1) = readingTCh1(1);

for i=2:size(readingTCh1)
    timeConversionCh1(i) = (readingTCh1(i) + timeConversionCh1(i-1));
end

timeConversionCh2 = zeros(size(readingTCh2));
timeConversionCh2(1) = readingTCh2(1);

for i=2:size(readingTCh2)
    timeConversionCh2(i) = (readingTCh2(i) + timeConversionCh1(i-1));
end

voltageConversionCh1 = zeros(size(readingVCh1));

for i=1:size(readingVCh1)
    voltageConversionCh1(i) = ((readingVCh1(i)*1.5259*10^(-5)) - 0.5);
end

voltageConversionCh2 = zeros(size(readingVCh2));

for i=1:size(readingVCh2)
    voltageConversionCh2(i) = ((readingVCh2(i)*1.5259*10^(-5)) - 0.5);
end

%{
% CFD Work

[VMinCh1,VMinCh1Index] = min(voltageConversionCh1);
[VMinCh2,VMinCh2Index] = min(voltageConversionCh2);

VMinCh1Fraction = abs((0.10*VMinCh1));
VMinCh2Fraction = abs((0.10*VMinCh2));

[VCh1Trigger,VCh1TriggerIndex] = min(abs(VMinCh1Fraction - voltageConversionCh1(VMinCh1Index - 100:VMinCh1Index)));

VCh1TriggerTrueIndex = (VCh1TriggerIndex + (VMinCh1Index - 100));
%}

if c == 1
    timeConversion = timeConversionCh1;
    voltageConversion = voltageConversionCh1;
    
else
    timeConversion = timeConversionCh2;
    voltageConversion = voltageConversionCh2;
    
end
fclose(fid);
end
